<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
			http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd"
	default-lazy-init="true" default-autowire="byName">

	<!-- ======================== FILTER CHAIN ======================= -->
	<bean id="springSecurityFilterChain"
		class="org.vulpe.security.controller.filter.VulpeFilterChainProxy">
		<!--
			<property name="filterInvocationDefinitionSource"> <value>
			CONVERT_URL_TO_LOWERCASE_BEFORE_COMPARISON PATTERN_TYPE_APACHE_ANT
			/j_spring_security_check*=securityContextPersistenceFilter,authenticationProcessingFilter
			/**/*=securityContextPersistenceFilter,logoutFilter,authenticationProcessingFilter,securityContextHolderAwareRequestFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor
			</value> </property>
		-->
		<security:filter-chain-map path-type="ant">
			<security:filter-chain pattern="/j_spring_security_check*"
				filters="securityContextPersistenceFilter,authenticationProcessingFilter" />
			<security:filter-chain pattern="/**/*"
				filters="securityContextPersistenceFilter,logoutFilter,authenticationProcessingFilter,securityContextHolderAwareRequestFilter,anonymousProcessingFilter,exceptionTranslationFilter,filterInvocationInterceptor" />
		</security:filter-chain-map>
	</bean>

	<security:global-method-security
		secured-annotations="disabled" jsr250-annotations="disabled" />

	<!-- ======================== AUTHENTICATION ======================= -->
	<bean id="securityContextPersistenceFilter"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter">
	</bean>

	<bean id="logoutFilter"
		class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<constructor-arg value="/index.jsp" />
		<!-- URL redirected to after logout -->
		<constructor-arg>
			<list>
				<bean
					class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
			</list>
		</constructor-arg>
	</bean>

	<security:http>
		<security:form-login authentication-failure-url="/authenticator.action?login_error=1"
			default-target-url="/" login-processing-url="/j_spring_security_check" />
	</security:http>

	<bean id="securityContextHolderAwareRequestFilter"
		class="org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter" />

	<util:properties id="anonymousConfig"
		location="classpath:anonymousConfig.properties" />

	<bean id="anonymousProcessingFilter"
		class="org.vulpe.security.providers.anonymous.VulpeAnonymousProcessingFilter">
		<property name="anonymousConfig">
			<ref local="anonymousConfig" />
		</property>
	</bean>

	<bean id="exceptionTranslationFilter"
		class="org.springframework.security.web.access.ExceptionTranslationFilter">
		<property name="authenticationEntryPoint">
			<ref local="loginUrlAuthenticationEntryPoint" />
		</property>
		<property name="accessDeniedHandler">
			<bean
				class="org.springframework.security.web.access.AccessDeniedHandlerImpl">
				<property name="errorPage" value="/authenticator.action?access_denied=true" />
			</bean>
		</property>
	</bean>

	<!--
		=== Custom filterInvocationInterceptor implementation starts here ===
	-->
	<bean id="filterInvocationInterceptor"
		class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<property name="authenticationManager">
			<ref bean="authenticationManager" />
		</property>
		<property name="accessDecisionManager">
			<ref local="httpRequestAccessDecisionManager" />
		</property>
		<property name="objectDefinitionSource">
			<ref local="dbdrivenFilterInvocationDefinitionSource" />
		</property>
	</bean>

	<bean id="dbdrivenFilterInvocationDefinitionSource"
		class="org.vulpe.security.authorization.DatabaseDrivenFilterInvocationDefinitionSource">
		<property name="authorizationService">
			<ref local="authorizationService" />
		</property>
	</bean>

	<bean id="authorizationService"
		class="org.vulpe.security.authorization.model.services.impl.AuthorizationServiceImpl">
		<property name="authorizationDAO">
			<ref local="authorizationDAO" />
		</property>
	</bean>

	<bean id="authorizationDAO"
		class="org.vulpe.security.authorization.model.dao.impl.db4o.AuthorizationDAOImpl" />

	<security:authentication-manager>
		<security:authentication-provider
			ref="daoAuthenticationProvider" />
		<security:authentication-provider
			ref="anonymousAuthenticationProvider" />
	</security:authentication-manager>

	<!--
		==== Custom AuthenticationProvider implementation begins here ====
	-->
	<bean id="daoAuthenticationProvider"
		class="org.vulpe.security.authentication.VulpeSecurityAuthenticationProvider">
		<property name="authenticationService">
			<ref local="userAuthenticationService" />
		</property>
	</bean>

	<bean id="userAuthenticationService"
		class="org.vulpe.security.authentication.model.services.impl.UserAuthenticationServiceImpl">
		<property name="authenticationDAO">
			<ref local="userAuthenticationDAO" />
		</property>
	</bean>

	<bean id="userAuthenticationDAO"
		class="org.vulpe.security.authentication.model.dao.impl.db4o.UserAuthenticationDAOImpl" />

	<!--
		==== Custom AuthenticationProvider implementation ends here ====
	-->
	<bean id="anonymousAuthenticationProvider"
		class="org.vulpe.security.providers.anonymous.VulpeAnonymousAuthenticationProvider">
		<property name="anonymousConfig">
			<ref local="anonymousConfig" />
		</property>
	</bean>

	<!-- Automatically receives AuthenticationEvent messages -->
	<bean id="loggerListener"
		class="org.springframework.security.authentication.event.LoggerListener" />
	<!--
		===================== HTTP REQUEST SECURITY ====================
	-->
	<bean id="loginUrlAuthenticationEntryPoint"
		class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
		<property name="loginFormUrl">
			<value>/authenticator.action</value>
		</property>
		<property name="forceHttps">
			<value>false</value>
		</property>
	</bean>

	<bean id="httpRequestAccessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
		<property name="allowIfAllAbstainDecisions">
			<value>false</value>
		</property>
		<property name="decisionVoters">
			<list>
				<ref bean="roleVoter" />
			</list>
		</property>
	</bean>

	<bean id="roleVoter" class="org.springframework.security.vote.RoleVoter" />

</beans>